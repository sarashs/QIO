// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "QIO_accel_hw_int_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic QIO_accel_hw_int_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic QIO_accel_hw_int_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state1 = "1";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state2 = "10";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state3 = "100";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state4 = "1000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state5 = "10000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state6 = "100000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> QIO_accel_hw_int_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_1 = "1";
const sc_lv<1> QIO_accel_hw_int_s::ap_const_lv1_0 = "0";
const sc_lv<1> QIO_accel_hw_int_s::ap_const_lv1_1 = "1";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_3 = "11";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_4 = "100";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_9 = "1001";
const sc_lv<7> QIO_accel_hw_int_s::ap_const_lv7_0 = "0000000";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_2 = "10";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_8 = "1000";
const sc_lv<4> QIO_accel_hw_int_s::ap_const_lv4_0 = "0000";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_A = "1010";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_5 = "101";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_6 = "110";
const sc_lv<32> QIO_accel_hw_int_s::ap_const_lv32_7 = "111";
const sc_lv<64> QIO_accel_hw_int_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<7> QIO_accel_hw_int_s::ap_const_lv7_40 = "1000000";
const sc_lv<7> QIO_accel_hw_int_s::ap_const_lv7_1 = "1";
const sc_lv<4> QIO_accel_hw_int_s::ap_const_lv4_A = "1010";
const sc_lv<4> QIO_accel_hw_int_s::ap_const_lv4_1 = "1";
const bool QIO_accel_hw_int_s::ap_const_boolean_1 = true;

QIO_accel_hw_int_s::QIO_accel_hw_int_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    current_val_U = new QIO_accel_hw_int_bkb("current_val_U");
    current_val_U->clk(ap_clk);
    current_val_U->reset(ap_rst);
    current_val_U->address0(current_val_address0);
    current_val_U->ce0(current_val_ce0);
    current_val_U->we0(current_val_we0);
    current_val_U->d0(current_val_d0);
    current_val_U->q0(current_val_q0);
    new_val_U = new QIO_accel_hw_int_bkb("new_val_U");
    new_val_U->clk(ap_clk);
    new_val_U->reset(ap_rst);
    new_val_U->address0(new_val_address0);
    new_val_U->ce0(new_val_ce0);
    new_val_U->we0(new_val_we0);
    new_val_U->d0(init_val_q0);
    new_val_U->q0(new_val_q0);
    grp_Galois_LFSR_32_33_hw_fu_156 = new Galois_LFSR_32_33_hw("grp_Galois_LFSR_32_33_hw_fu_156");
    grp_Galois_LFSR_32_33_hw_fu_156->ap_clk(ap_clk);
    grp_Galois_LFSR_32_33_hw_fu_156->ap_rst(ap_rst);
    grp_Galois_LFSR_32_33_hw_fu_156->ap_start(grp_Galois_LFSR_32_33_hw_fu_156_ap_start);
    grp_Galois_LFSR_32_33_hw_fu_156->ap_done(grp_Galois_LFSR_32_33_hw_fu_156_ap_done);
    grp_Galois_LFSR_32_33_hw_fu_156->ap_idle(grp_Galois_LFSR_32_33_hw_fu_156_ap_idle);
    grp_Galois_LFSR_32_33_hw_fu_156->ap_ready(grp_Galois_LFSR_32_33_hw_fu_156_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln70_fu_193_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln70_fu_193_p2 );

    SC_METHOD(thread_current_val_address0);
    sensitive << ( zext_ln37_reg_218 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln71_fu_205_p1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_current_val_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_current_val_d0);
    sensitive << ( init_val_q0 );
    sensitive << ( new_val_load_reg_239 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_current_val_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln41_fu_181_p2 );

    SC_METHOD(thread_final_val_address0);
    sensitive << ( zext_ln71_reg_260 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_final_val_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_final_val_d0);
    sensitive << ( current_val_q0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_final_val_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_Galois_LFSR_32_33_hw_fu_156_ap_start);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_i_1_fu_187_p2);
    sensitive << ( i1_0_reg_134 );

    SC_METHOD(thread_i_2_fu_199_p2);
    sensitive << ( i2_0_reg_145 );

    SC_METHOD(thread_i_fu_170_p2);
    sensitive << ( i_0_reg_123 );

    SC_METHOD(thread_icmp_ln36_fu_164_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_123 );

    SC_METHOD(thread_icmp_ln41_fu_181_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_134 );

    SC_METHOD(thread_icmp_ln70_fu_193_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i2_0_reg_145 );

    SC_METHOD(thread_init_val_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln37_fu_176_p1 );

    SC_METHOD(thread_init_val_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_new_val_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln37_reg_218 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_new_val_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_new_val_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_zext_ln37_fu_176_p1);
    sensitive << ( i_0_reg_123 );

    SC_METHOD(thread_zext_ln71_fu_205_p1);
    sensitive << ( i2_0_reg_145 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln36_fu_164_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln70_fu_193_p2 );
    sensitive << ( icmp_ln41_fu_181_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "QIO_accel_hw_int_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, init_val_address0, "(port)init_val_address0");
    sc_trace(mVcdFile, init_val_ce0, "(port)init_val_ce0");
    sc_trace(mVcdFile, init_val_q0, "(port)init_val_q0");
    sc_trace(mVcdFile, final_val_address0, "(port)final_val_address0");
    sc_trace(mVcdFile, final_val_ce0, "(port)final_val_ce0");
    sc_trace(mVcdFile, final_val_we0, "(port)final_val_we0");
    sc_trace(mVcdFile, final_val_d0, "(port)final_val_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_170_p2, "i_fu_170_p2");
    sc_trace(mVcdFile, i_reg_213, "i_reg_213");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln37_fu_176_p1, "zext_ln37_fu_176_p1");
    sc_trace(mVcdFile, zext_ln37_reg_218, "zext_ln37_reg_218");
    sc_trace(mVcdFile, icmp_ln36_fu_164_p2, "icmp_ln36_fu_164_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, new_val_q0, "new_val_q0");
    sc_trace(mVcdFile, new_val_load_reg_239, "new_val_load_reg_239");
    sc_trace(mVcdFile, i_1_fu_187_p2, "i_1_fu_187_p2");
    sc_trace(mVcdFile, i_1_reg_247, "i_1_reg_247");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_2_fu_199_p2, "i_2_fu_199_p2");
    sc_trace(mVcdFile, i_2_reg_255, "i_2_reg_255");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln71_fu_205_p1, "zext_ln71_fu_205_p1");
    sc_trace(mVcdFile, zext_ln71_reg_260, "zext_ln71_reg_260");
    sc_trace(mVcdFile, icmp_ln70_fu_193_p2, "icmp_ln70_fu_193_p2");
    sc_trace(mVcdFile, current_val_address0, "current_val_address0");
    sc_trace(mVcdFile, current_val_ce0, "current_val_ce0");
    sc_trace(mVcdFile, current_val_we0, "current_val_we0");
    sc_trace(mVcdFile, current_val_d0, "current_val_d0");
    sc_trace(mVcdFile, current_val_q0, "current_val_q0");
    sc_trace(mVcdFile, new_val_address0, "new_val_address0");
    sc_trace(mVcdFile, new_val_ce0, "new_val_ce0");
    sc_trace(mVcdFile, new_val_we0, "new_val_we0");
    sc_trace(mVcdFile, grp_Galois_LFSR_32_33_hw_fu_156_ap_start, "grp_Galois_LFSR_32_33_hw_fu_156_ap_start");
    sc_trace(mVcdFile, grp_Galois_LFSR_32_33_hw_fu_156_ap_done, "grp_Galois_LFSR_32_33_hw_fu_156_ap_done");
    sc_trace(mVcdFile, grp_Galois_LFSR_32_33_hw_fu_156_ap_idle, "grp_Galois_LFSR_32_33_hw_fu_156_ap_idle");
    sc_trace(mVcdFile, grp_Galois_LFSR_32_33_hw_fu_156_ap_ready, "grp_Galois_LFSR_32_33_hw_fu_156_ap_ready");
    sc_trace(mVcdFile, i_0_reg_123, "i_0_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_0_reg_134, "i1_0_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i2_0_reg_145, "i2_0_reg_145");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln41_fu_181_p2, "icmp_ln41_fu_181_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

QIO_accel_hw_int_s::~QIO_accel_hw_int_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete current_val_U;
    delete new_val_U;
    delete grp_Galois_LFSR_32_33_hw_fu_156;
}

void QIO_accel_hw_int_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i1_0_reg_134 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i1_0_reg_134 = i_1_reg_247.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_181_p2.read()))) {
        i2_0_reg_145 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i2_0_reg_145 = i_2_reg_255.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_123 = i_reg_213.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_123 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_247 = i_1_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_2_reg_255 = i_2_fu_199_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_213 = i_fu_170_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        new_val_load_reg_239 = new_val_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_164_p2.read(), ap_const_lv1_0))) {
        zext_ln37_reg_218 = zext_ln37_fu_176_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln70_fu_193_p2.read()))) {
        zext_ln71_reg_260 = zext_ln71_fu_205_p1.read();
    }
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void QIO_accel_hw_int_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void QIO_accel_hw_int_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln70_fu_193_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln70_fu_193_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_current_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        current_val_address0 =  (sc_lv<6>) (zext_ln71_fu_205_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        current_val_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        current_val_address0 =  (sc_lv<6>) (zext_ln37_reg_218.read());
    } else {
        current_val_address0 = "XXXXXX";
    }
}

void QIO_accel_hw_int_s::thread_current_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        current_val_ce0 = ap_const_logic_1;
    } else {
        current_val_ce0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_current_val_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        current_val_d0 = new_val_load_reg_239.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        current_val_d0 = init_val_q0.read();
    } else {
        current_val_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void QIO_accel_hw_int_s::thread_current_val_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln41_fu_181_p2.read())))) {
        current_val_we0 = ap_const_logic_1;
    } else {
        current_val_we0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_final_val_address0() {
    final_val_address0 =  (sc_lv<6>) (zext_ln71_reg_260.read());
}

void QIO_accel_hw_int_s::thread_final_val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        final_val_ce0 = ap_const_logic_1;
    } else {
        final_val_ce0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_final_val_d0() {
    final_val_d0 = current_val_q0.read();
}

void QIO_accel_hw_int_s::thread_final_val_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        final_val_we0 = ap_const_logic_1;
    } else {
        final_val_we0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_grp_Galois_LFSR_32_33_hw_fu_156_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        grp_Galois_LFSR_32_33_hw_fu_156_ap_start = ap_const_logic_1;
    } else {
        grp_Galois_LFSR_32_33_hw_fu_156_ap_start = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_i_1_fu_187_p2() {
    i_1_fu_187_p2 = (!i1_0_reg_134.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_134.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void QIO_accel_hw_int_s::thread_i_2_fu_199_p2() {
    i_2_fu_199_p2 = (!i2_0_reg_145.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i2_0_reg_145.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void QIO_accel_hw_int_s::thread_i_fu_170_p2() {
    i_fu_170_p2 = (!i_0_reg_123.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_123.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void QIO_accel_hw_int_s::thread_icmp_ln36_fu_164_p2() {
    icmp_ln36_fu_164_p2 = (!i_0_reg_123.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_123.read() == ap_const_lv7_40);
}

void QIO_accel_hw_int_s::thread_icmp_ln41_fu_181_p2() {
    icmp_ln41_fu_181_p2 = (!i1_0_reg_134.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_134.read() == ap_const_lv4_A);
}

void QIO_accel_hw_int_s::thread_icmp_ln70_fu_193_p2() {
    icmp_ln70_fu_193_p2 = (!i2_0_reg_145.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_145.read() == ap_const_lv7_40);
}

void QIO_accel_hw_int_s::thread_init_val_address0() {
    init_val_address0 =  (sc_lv<6>) (zext_ln37_fu_176_p1.read());
}

void QIO_accel_hw_int_s::thread_init_val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        init_val_ce0 = ap_const_logic_1;
    } else {
        init_val_ce0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_new_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        new_val_address0 =  (sc_lv<6>) (zext_ln37_reg_218.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        new_val_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        new_val_address0 = "XXXXXX";
    }
}

void QIO_accel_hw_int_s::thread_new_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        new_val_ce0 = ap_const_logic_1;
    } else {
        new_val_ce0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_new_val_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        new_val_we0 = ap_const_logic_1;
    } else {
        new_val_we0 = ap_const_logic_0;
    }
}

void QIO_accel_hw_int_s::thread_zext_ln37_fu_176_p1() {
    zext_ln37_fu_176_p1 = esl_zext<64,7>(i_0_reg_123.read());
}

void QIO_accel_hw_int_s::thread_zext_ln71_fu_205_p1() {
    zext_ln71_fu_205_p1 = esl_zext<64,7>(i2_0_reg_145.read());
}

void QIO_accel_hw_int_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_164_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln41_fu_181_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln70_fu_193_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

