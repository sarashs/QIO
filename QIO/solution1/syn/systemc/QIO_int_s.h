// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _QIO_int_s_HH_
#define _QIO_int_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "QIO_accel_fadd_32cud.h"
#include "QIO_accel_fmul_32dEe.h"
#include "QIO_accel_sitofp_eOg.h"
#include "QIO_int_s_currentbkb.h"

namespace ap_rtl {

struct QIO_int_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > current_val_address0;
    sc_out< sc_logic > current_val_ce0;
    sc_in< sc_lv<32> > current_val_q0;
    sc_out< sc_lv<12> > coef_list_address0;
    sc_out< sc_logic > coef_list_ce0;
    sc_in< sc_lv<32> > coef_list_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    QIO_int_s(sc_module_name name);
    SC_HAS_PROCESS(QIO_int_s);

    ~QIO_int_s();

    sc_trace_file* mVcdFile;

    QIO_int_s_currentbkb* current_val2_U;
    QIO_accel_fadd_32cud<1,5,32,32,32>* QIO_accel_fadd_32cud_U2;
    QIO_accel_fmul_32dEe<1,4,32,32,32>* QIO_accel_fmul_32dEe_U3;
    QIO_accel_sitofp_eOg<1,6,32,32>* QIO_accel_sitofp_eOg_U4;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_0_reg_120;
    sc_signal< sc_lv<32> > j_0_in_reg_143;
    sc_signal< sc_lv<32> > reg_167;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< bool > ap_block_state24_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state29_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state34_pp1_stage1_iter2;
    sc_signal< bool > ap_block_state39_pp1_stage1_iter3;
    sc_signal< bool > ap_block_state44_pp1_stage1_iter4;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln34_reg_356;
    sc_signal< sc_lv<1> > icmp_ln34_reg_356_pp1_iter2_reg;
    sc_signal< sc_lv<32> > grp_fu_156_p2;
    sc_signal< sc_lv<32> > reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > grp_load_fu_163_p1;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<1> > icmp_ln34_reg_356_pp1_iter3_reg;
    sc_signal< sc_lv<32> > grp_fu_152_p2;
    sc_signal< sc_lv<32> > reg_183;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state28_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state33_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state38_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state43_pp1_stage0_iter4;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln26_fu_192_p2;
    sc_signal< sc_lv<1> > icmp_ln26_reg_292;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > i_fu_198_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln28_fu_204_p1;
    sc_signal< sc_lv<64> > zext_ln28_reg_301;
    sc_signal< sc_lv<7> > i_6_fu_220_p2;
    sc_signal< sc_lv<7> > i_6_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln31_fu_214_p2;
    sc_signal< sc_lv<32> > current_val_load_2_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<14> > zext_ln32_2_fu_243_p1;
    sc_signal< sc_lv<14> > zext_ln32_2_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > grp_fu_160_p1;
    sc_signal< sc_lv<32> > tmp_reg_346;
    sc_signal< sc_lv<32> > zext_ln31_fu_258_p1;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > icmp_ln34_fu_262_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_356_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln34_reg_356_pp1_iter4_reg;
    sc_signal< sc_lv<32> > j_fu_268_p2;
    sc_signal< sc_lv<32> > j_reg_360;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<14> > add_ln36_fu_283_p2;
    sc_signal< sc_lv<14> > add_ln36_reg_365;
    sc_signal< sc_lv<14> > add_ln36_reg_365_pp1_iter1_reg;
    sc_signal< sc_lv<32> > current_val2_q0;
    sc_signal< sc_lv<32> > current_val2_load_reg_375;
    sc_signal< sc_lv<32> > tmp_2_reg_380;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_state25_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state30_pp1_stage2_iter1;
    sc_signal< bool > ap_block_state35_pp1_stage2_iter2;
    sc_signal< bool > ap_block_state40_pp1_stage2_iter3;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< sc_lv<32> > tmp_4_reg_390;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state23;
    sc_signal< bool > ap_block_state27_pp1_stage4_iter0;
    sc_signal< bool > ap_block_state32_pp1_stage4_iter1;
    sc_signal< bool > ap_block_state37_pp1_stage4_iter2;
    sc_signal< bool > ap_block_state42_pp1_stage4_iter3;
    sc_signal< bool > ap_block_pp1_stage4_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage4;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<6> > current_val2_address0;
    sc_signal< sc_logic > current_val2_ce0;
    sc_signal< sc_logic > current_val2_we0;
    sc_signal< sc_lv<7> > i1_0_reg_131;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > ap_phi_mux_j_0_in_phi_fu_146_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln32_fu_226_p1;
    sc_signal< sc_lv<64> > zext_ln32_3_fu_253_p1;
    sc_signal< sc_lv<64> > sext_ln36_fu_274_p1;
    sc_signal< sc_lv<64> > sext_ln36_1_fu_288_p1;
    sc_signal< sc_lv<32> > cost_new_write_assig_fu_54;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_cost_new_write_assig_2;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<32> > grp_fu_152_p1;
    sc_signal< sc_lv<32> > grp_fu_156_p0;
    sc_signal< sc_lv<32> > grp_fu_156_p1;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage3;
    sc_signal< bool > ap_block_pp1_stage3;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<32> > grp_fu_160_p0;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<13> > tmp_1_fu_235_p3;
    sc_signal< sc_lv<14> > zext_ln32_1_fu_231_p1;
    sc_signal< sc_lv<14> > add_ln32_fu_247_p2;
    sc_signal< sc_lv<14> > trunc_ln36_fu_279_p1;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_state26_pp1_stage3_iter0;
    sc_signal< bool > ap_block_state31_pp1_stage3_iter1;
    sc_signal< bool > ap_block_state36_pp1_stage3_iter2;
    sc_signal< bool > ap_block_state41_pp1_stage3_iter3;
    sc_signal< bool > ap_block_pp1_stage3_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state1;
    static const sc_lv<27> ap_ST_fsm_pp0_stage0;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_state9;
    static const sc_lv<27> ap_ST_fsm_state10;
    static const sc_lv<27> ap_ST_fsm_state11;
    static const sc_lv<27> ap_ST_fsm_state12;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_state14;
    static const sc_lv<27> ap_ST_fsm_state15;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_state17;
    static const sc_lv<27> ap_ST_fsm_state18;
    static const sc_lv<27> ap_ST_fsm_state19;
    static const sc_lv<27> ap_ST_fsm_state20;
    static const sc_lv<27> ap_ST_fsm_state21;
    static const sc_lv<27> ap_ST_fsm_state22;
    static const sc_lv<27> ap_ST_fsm_pp1_stage0;
    static const sc_lv<27> ap_ST_fsm_pp1_stage1;
    static const sc_lv<27> ap_ST_fsm_pp1_stage2;
    static const sc_lv<27> ap_ST_fsm_pp1_stage3;
    static const sc_lv<27> ap_ST_fsm_pp1_stage4;
    static const sc_lv<27> ap_ST_fsm_state45;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_16;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_3F;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln32_fu_247_p2();
    void thread_add_ln36_fu_283_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage3();
    void thread_ap_CS_fsm_pp1_stage4();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp1_stage3();
    void thread_ap_block_pp1_stage3_subdone();
    void thread_ap_block_pp1_stage4_subdone();
    void thread_ap_block_state23_pp1_stage0_iter0();
    void thread_ap_block_state24_pp1_stage1_iter0();
    void thread_ap_block_state25_pp1_stage2_iter0();
    void thread_ap_block_state26_pp1_stage3_iter0();
    void thread_ap_block_state27_pp1_stage4_iter0();
    void thread_ap_block_state28_pp1_stage0_iter1();
    void thread_ap_block_state29_pp1_stage1_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state30_pp1_stage2_iter1();
    void thread_ap_block_state31_pp1_stage3_iter1();
    void thread_ap_block_state32_pp1_stage4_iter1();
    void thread_ap_block_state33_pp1_stage0_iter2();
    void thread_ap_block_state34_pp1_stage1_iter2();
    void thread_ap_block_state35_pp1_stage2_iter2();
    void thread_ap_block_state36_pp1_stage3_iter2();
    void thread_ap_block_state37_pp1_stage4_iter2();
    void thread_ap_block_state38_pp1_stage0_iter3();
    void thread_ap_block_state39_pp1_stage1_iter3();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state40_pp1_stage2_iter3();
    void thread_ap_block_state41_pp1_stage3_iter3();
    void thread_ap_block_state42_pp1_stage4_iter3();
    void thread_ap_block_state43_pp1_stage0_iter4();
    void thread_ap_block_state44_pp1_stage1_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state23();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_j_0_in_phi_fu_146_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_allocacmp_cost_new_write_assig_2();
    void thread_coef_list_address0();
    void thread_coef_list_ce0();
    void thread_current_val2_address0();
    void thread_current_val2_ce0();
    void thread_current_val2_we0();
    void thread_current_val_address0();
    void thread_current_val_ce0();
    void thread_grp_fu_152_p1();
    void thread_grp_fu_156_p0();
    void thread_grp_fu_156_p1();
    void thread_grp_fu_160_p0();
    void thread_grp_load_fu_163_p1();
    void thread_i_6_fu_220_p2();
    void thread_i_fu_198_p2();
    void thread_icmp_ln26_fu_192_p2();
    void thread_icmp_ln31_fu_214_p2();
    void thread_icmp_ln34_fu_262_p2();
    void thread_j_fu_268_p2();
    void thread_sext_ln36_1_fu_288_p1();
    void thread_sext_ln36_fu_274_p1();
    void thread_tmp_1_fu_235_p3();
    void thread_trunc_ln36_fu_279_p1();
    void thread_zext_ln28_fu_204_p1();
    void thread_zext_ln31_fu_258_p1();
    void thread_zext_ln32_1_fu_231_p1();
    void thread_zext_ln32_2_fu_243_p1();
    void thread_zext_ln32_3_fu_253_p1();
    void thread_zext_ln32_fu_226_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
